#!/bin/bash

test_efund=@TEST_EFUND@
have_netcdf=@HAVE_NETCDF@

# Use tables that are built as an extra check that they work (if available)
if [ ${test_efund,,} = on ] || [ ${test_efund,,} = true ]; then
  export link_efit="@CURRENT_MACHINE_BUILT_DIR@"
else
  export link_efit="@CURRENT_MACHINE_LINK_DIR@"
fi
export link_store=""

# Ubuntu tries to use threads even without implementation in program
export OMP_NUM_THREADS=1

# Necessary on NERSC
export HDF5_USE_FILE_LOCKING=FALSE

# Sanity checks
if ! test -e ${link_efit}/green/mhdin.dat; then
  echo "not running test because Greens tables were not found"
  exit 1
fi
if ! test -e ${link_efit}/lim.dat; then
  echo "not running test because limiter was not found"
  exit 1
fi

# Remove any previous outputs
rm -r first_out @RUNID@_first.h5

# Move outputs from previous test to subdirectory
mkdir first_out
mv run_efit.out first_out
if [ ${have_netcdf,,} = on ] || [ ${have_netcdf,,} = true ]; then
  outputs=( a g m )
else
  outputs=( a g )
fi
for prefix in ${outputs[*]}; do
  for label in @EFIT_LABEL@; do
    mv ${prefix}${label} first_out
  done
done

# Rename OMAS output from previous run to use as input
mv @RUNID@.h5 @RUNID@_first.h5

# Now run efit
@MPICMD@ @NPROC@ @EFIT_EXEC@ @GRID_SIZE@ << __c__MATCHING_EOF__c__ > run_efit.out

@EFIT_MODE@
@RUNID@_first.h5

__c__MATCHING_EOF__c__

# Pass the results of the efit command up so that CTest knows what happened
exit $result
