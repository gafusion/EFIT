*DECK D9LN2R
      REAL*8 FUNCTION D9LN2R (X)
C***BEGIN PROLOGUE  D9LN2R
C***SUBSIDIARY
C***PURPOSE  Evaluate LOG(1+X) from second order relative accuracy so
C            that LOG(1+X) = X - X**2/2 + X**3*D9LN2R(X)
C***LIBRARY   SLATEC (FNLIB)
C***CATEGORY  C4B
C***TYPE      REAL*8 (R9LN2R-S, D9LN2R-D, C9LN2R-C)
C***KEYWORDS  ELEMENTARY FUNCTIONS, FNLIB, LOGARITHM, SECOND ORDER
C***AUTHOR  Fullerton, W., (LANL)
C***DESCRIPTION
C
C Evaluate  LOG(1+X)  from 2-nd order with relative error accuracy so
C that    LOG(1+X) = X - X**2/2 + X**3*D9LN2R(X)
C
C Series for LN21       on the interval -6.25000E-01 to  0.
C                                        with weighted error   1.82E-32
C                                         log weighted error  31.74
C                               significant figures required  31.00
C                                    decimal places required  32.59
C
C Series for LN22       on the interval  0.          to  8.12500E-01
C                                        with weighted error   6.10E-32
C                                         log weighted error  31.21
C                               significant figures required  30.32
C                                    decimal places required  32.00
C
C***REFERENCES  (NONE)
C***ROUTINES CALLED  D1MACH, DCSEVL, INITDS, XERMSG
C***REVISION HISTORY  (YYMMDD)
C   780401  DATE WRITTEN
C   890531  Changed all specific intrinsics to generic.  (WRB)
C   890911  Removed unnecessary intrinsics.  (WRB)
C   890911  REVISION DATE from Version 3.2
C   891214  Prologue converted to Version 4.0 format.  (BAB)
C   900315  CALLs to XERROR changed to CALLs to XERMSG.  (THJ)
C   900720  Routine changed from user-callable to subsidiary.  (WRB)
C***END PROLOGUE  D9LN2R
C============
C idecl:  explicitize implicit INTEGER declarations:
      IMPLICIT NONE
      integer, parameter :: r8 = selected_real_kind(12,100)
      INTEGER ntln21,ntln22,initds
C============
C idecl:  explicitize implicit REAL declarations:
      REAL*8 eps,sqeps
C============
      REAL*8 X, XBIG, TXBIG, XMAX, TXMAX, XMIN, LN21CS(50),
     *  LN22CS(37), DCSEVL, D1MACH
      LOGICAL FIRST
      SAVE LN21CS, LN22CS, NTLN21, NTLN22, XMIN, XBIG, XMAX, FIRST
      DATA LN21CS(  1) / +.18111962513478809875894953043071E+0_r8/
      DATA LN21CS(  2) / -.15627123192872462669625155541078E+0_r8/
      DATA LN21CS(  3) / +.28676305361557275209540627102051E-1_r8/
      DATA LN21CS(  4) / -.55586996559481398781157725126781E-2_r8/
      DATA LN21CS(  5) / +.11178976652299837657335666279727E-2_r8/
      DATA LN21CS(  6) / -.23080508982327947182299279585705E-3_r8/
      DATA LN21CS(  7) / +.48598853341100175874681558068750E-4_r8/
      DATA LN21CS(  8) / -.10390127388903210765514242633338E-4_r8/
      DATA LN21CS(  9) / +.22484563707390128494621804946408E-5_r8/
      DATA LN21CS( 10) / -.49140592739266484875327802597091E-6_r8/
      DATA LN21CS( 11) / +.10828256507077483336620152971597E-6_r8/
      DATA LN21CS( 12) / -.24025872763420701435976675416719E-7_r8/
      DATA LN21CS( 13) / +.53624600472708133762984443250163E-8_r8/
      DATA LN21CS( 14) / -.12029951362138772264671646424377E-8_r8/
      DATA LN21CS( 15) / +.27107889277591860785622551632266E-9_r8/
      DATA LN21CS( 16) / -.61323562618319010068796728430690E-10_r8/
      DATA LN21CS( 17) / +.13920858369159469857436908543978E-10_r8/
      DATA LN21CS( 18) / -.31699300330223494015283057260883E-11_r8/
      DATA LN21CS( 19) / +.72383754044307505335214326197011E-12_r8/
      DATA LN21CS( 20) / -.16570017184764411391498805506268E-12_r8/
      DATA LN21CS( 21) / +.38018428663117424257364422631876E-13_r8/
      DATA LN21CS( 22) / -.87411189296972700259724429899137E-14_r8/
      DATA LN21CS( 23) / +.20135619845055748302118751028154E-14_r8/
      DATA LN21CS( 24) / -.46464456409033907031102008154477E-15_r8/
      DATA LN21CS( 25) / +.10739282147018339453453338554925E-15_r8/
      DATA LN21CS( 26) / -.24858534619937794755534021833960E-16_r8/
      DATA LN21CS( 27) / +.57620197950800189813888142628181E-17_r8/
      DATA LN21CS( 28) / -.13373063769804394701402199958050E-17_r8/
      DATA LN21CS( 29) / +.31074653227331824966533807166805E-18_r8/
      DATA LN21CS( 30) / -.72288104083040539906901957917627E-19_r8/
      DATA LN21CS( 31) / +.16833783788037385103313258186888E-19_r8/
      DATA LN21CS( 32) / -.39239463312069958052519372739925E-20_r8/
      DATA LN21CS( 33) / +.91551468387536789746385528640853E-21_r8/
      DATA LN21CS( 34) / -.21378895321320159520982095801002E-21_r8/
      DATA LN21CS( 35) / +.49964507479047864699828564568746E-22_r8/
      DATA LN21CS( 36) / -.11686240636080170135360806147413E-22_r8/
      DATA LN21CS( 37) / +.27353123470391863775628686786559E-23_r8/
      DATA LN21CS( 38) / -.64068025084792111965050345881599E-24_r8/
      DATA LN21CS( 39) / +.15016293204334124162949071940266E-24_r8/
      DATA LN21CS( 40) / -.35217372410398479759497145002666E-25_r8/
      DATA LN21CS( 41) / +.82643901014814767012482733397333E-26_r8/
      DATA LN21CS( 42) / -.19404930275943401918036617898666E-26_r8/
      DATA LN21CS( 43) / +.45587880018841283562451588437333E-27_r8/
      DATA LN21CS( 44) / -.10715492087545202154378625023999E-27_r8/
      DATA LN21CS( 45) / +.25199408007927592978096674133333E-28_r8/
      DATA LN21CS( 46) / -.59289088400120969341750476800000E-29_r8/
      DATA LN21CS( 47) / +.13955864061057513058237153279999E-29_r8/
      DATA LN21CS( 48) / -.32864578813478583431436697599999E-30_r8/
      DATA LN21CS( 49) / +.77424967950478166247254698666666E-31_r8/
      DATA LN21CS( 50) / -.18247735667260887638125226666666E-31_r8/
      DATA LN22CS(  1) / -.2224253253502046082986015223552E+0_r8/
      DATA LN22CS(  2) / -.6104710010807862398680104755764E-1_r8/
      DATA LN22CS(  3) / +.7427235009750394590519629755729E-2_r8/
      DATA LN22CS(  4) / -.9335018261636970565612779606397E-3_r8/
      DATA LN22CS(  5) / +.1200499076872601283350731287359E-3_r8/
      DATA LN22CS(  6) / -.1570472295282004112823352608243E-4_r8/
      DATA LN22CS(  7) / +.2081874781051271096050783592759E-5_r8/
      DATA LN22CS(  8) / -.2789195577646713654057213051375E-6_r8/
      DATA LN22CS(  9) / +.3769355823760132058422895135447E-7_r8/
      DATA LN22CS( 10) / -.5130902896527711258240589938003E-8_r8/
      DATA LN22CS( 11) / +.7027141178150694738206218215392E-9_r8/
      DATA LN22CS( 12) / -.9674859550134342389243972005137E-10_r8/
      DATA LN22CS( 13) / +.1338104645924887306588496449748E-10_r8/
      DATA LN22CS( 14) / -.1858102603534063981628453846591E-11_r8/
      DATA LN22CS( 15) / +.2589294422527919749308600123070E-12_r8/
      DATA LN22CS( 16) / -.3619568316141588674466025382172E-13_r8/
      DATA LN22CS( 17) / +.5074037398016623088006858917396E-14_r8/
      DATA LN22CS( 18) / -.7131012977031127302700938748927E-15_r8/
      DATA LN22CS( 19) / +.1004490328554567481853386784126E-15_r8/
      DATA LN22CS( 20) / -.1417906532184025791904405075285E-16_r8/
      DATA LN22CS( 21) / +.2005297034743326117891086396074E-17_r8/
      DATA LN22CS( 22) / -.2840996662339803305365396717567E-18_r8/
      DATA LN22CS( 23) / +.4031469883969079899599878662826E-19_r8/
      DATA LN22CS( 24) / -.5729325241832207320455498956799E-20_r8/
      DATA LN22CS( 25) / +.8153488253890010675848928733866E-21_r8/
      DATA LN22CS( 26) / -.1161825588549721787606027468799E-21_r8/
      DATA LN22CS( 27) / +.1657516611662538343659339775999E-22_r8/
      DATA LN22CS( 28) / -.2367336704710805190114017280000E-23_r8/
      DATA LN22CS( 29) / +.3384670367975521386076569599999E-24_r8/
      DATA LN22CS( 30) / -.4843940829215718204296396799999E-25_r8/
      DATA LN22CS( 31) / +.6938759162514273718676138666666E-26_r8/
      DATA LN22CS( 32) / -.9948142607031436571923797333333E-27_r8/
      DATA LN22CS( 33) / +.1427440611211698610634752000000E-27_r8/
      DATA LN22CS( 34) / -.2049794721898234911566506666666E-28_r8/
      DATA LN22CS( 35) / +.2945648756401362222885546666666E-29_r8/
      DATA LN22CS( 36) / -.4235973185184957027669333333333E-30_r8/
      DATA LN22CS( 37) / +.6095532614003832040106666666666E-31_r8/
      DATA FIRST /.TRUE./
C***FIRST EXECUTABLE STATEMENT  D9LN2R
      IF (FIRST) THEN
         EPS = D1MACH(3)
         NTLN21 = INITDS (LN21CS, 50, 0.1_r8*EPS)
         NTLN22 = INITDS (LN22CS, 37, 0.1_r8*EPS)
C
         XMIN = -1.0_r8+ SQRT(D1MACH(4))
         SQEPS = SQRT (EPS)
         TXMAX = 8.0_r8/SQEPS
         XMAX = TXMAX - (EPS*TXMAX**2 - 2._r8*LOG(TXMAX))
     1     / (2._r8*EPS*TXMAX)
         TXBIG = 6.0_r8/SQRT(SQEPS)
         XBIG = TXBIG - (SQEPS*TXBIG**2 - 2._r8*LOG(TXBIG))
     1     / (2._r8*SQEPS*TXBIG)
      ENDIF
      FIRST = .FALSE.
C
      IF (X.LT.(-.625_r8) .OR. X.GT.0.8125_r8) GO TO 20
C
      IF (X.LT.0.0_r8) D9LN2R = 0.375_r8+
     1   DCSEVL (16._r8*X/5._r8+1._r8,
     1   LN21CS, NTLN21)
      IF (X.GE.0.0_r8) D9LN2R = 0.375_r8+
     1   DCSEVL (32._r8*X/13._r8-1._r8,
     1   LN22CS, NTLN22)
      RETURN
C
 20   IF (X .LT. XMIN) CALL XERMSG ('SLATEC', 'D9LN2R',
     +   'ANSWER LT HALF PRECISION BECAUSE X IS TOO NEAR -1', 1, 1)
      IF (X .GT. XMAX) CALL XERMSG ('SLATEC', 'D9LN2R',
     +   'NO PRECISION IN ANSWER BECAUSE X IS TOO BIG', 3, 2)
      IF (X .GT. XBIG) CALL XERMSG ('SLATEC', 'D9LN2R',
     +   'ANSWER LT HALF PRECISION BECAUSE X IS TOO BIG', 2, 1)
C
      D9LN2R = (LOG(1._r8+X) - X*(1._r8- 0.5_r8*X)) /
     >   X**3
      RETURN
C
      END
! 22Jun2000 fgtok -s r8_precision.sub "r8con.csh conversion"
! 22Jun2000 fgtok
! 22Jun2000 fgtok
