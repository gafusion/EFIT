*DECK DBSK1E
      REAL*8 FUNCTION DBSK1E (X)
C***BEGIN PROLOGUE  DBSK1E
C***PURPOSE  Compute the exponentially scaled modified (hyperbolic)
C            Bessel function of the third kind of order one.
C***LIBRARY   SLATEC (FNLIB)
C***CATEGORY  C10B1
C***TYPE      REAL*8 (BESK1E-S, DBSK1E-D)
C***KEYWORDS  EXPONENTIALLY SCALED, FNLIB, HYPERBOLIC BESSEL FUNCTION,
C             MODIFIED BESSEL FUNCTION, ORDER ONE, SPECIAL FUNCTIONS,
C             THIRD KIND
C***AUTHOR  Fullerton, W., (LANL)
C***DESCRIPTION
C
C DBSK1E(S) computes the double precision exponentially scaled
C modified (hyperbolic) Bessel function of the third kind of order
C one for positive double precision argument X.
C
C Series for BK1        on the interval  0.          to  4.00000E+00
C                                        with weighted error   9.16E-32
C                                         log weighted error  31.04
C                               significant figures required  30.61
C                                    decimal places required  31.64
C
C Series for AK1        on the interval  1.25000E-01 to  5.00000E-01
C                                        with weighted error   3.07E-32
C                                         log weighted error  31.51
C                               significant figures required  30.71
C                                    decimal places required  32.30
C
C Series for AK12       on the interval  0.          to  1.25000E-01
C                                        with weighted error   2.41E-32
C                                         log weighted error  31.62
C                               significant figures required  30.25
C                                    decimal places required  32.38
C
C***REFERENCES  (NONE)
C***ROUTINES CALLED  D1MACH, DBESI1, DCSEVL, INITDS, XERMSG
C***REVISION HISTORY  (YYMMDD)
C   770701  DATE WRITTEN
C   890531  Changed all specific intrinsics to generic.  (WRB)
C   890531  REVISION DATE from Version 3.2
C   891214  Prologue converted to Version 4.0 format.  (BAB)
C   900315  CALLs to XERROR changed to CALLs to XERMSG.  (THJ)
C***END PROLOGUE  DBSK1E
C============
C idecl:  explicitize implicit INTEGER declarations:
      IMPLICIT NONE
      integer, parameter :: r8 = selected_real_kind(12,100)
      INTEGER ntk1,ntak1,ntak12,initds
C============
C idecl:  explicitize implicit REAL declarations:
      REAL*8 eta
C============
      REAL*8 X, BK1CS(16), AK1CS(38), AK12CS(33), XMIN,
     1  XSML, Y, D1MACH, DCSEVL, DBESI1
      LOGICAL FIRST
      SAVE BK1CS, AK1CS, AK12CS, NTK1, NTAK1, NTAK12, XMIN, XSML,
     1  FIRST
      DATA BK1CS(  1) / +.25300227338947770532531120868533E-1_r8/
      DATA BK1CS(  2) / -.35315596077654487566723831691801E+0_r8/
      DATA BK1CS(  3) / -.12261118082265714823479067930042E+0_r8/
      DATA BK1CS(  4) / -.69757238596398643501812920296083E-2_r8/
      DATA BK1CS(  5) / -.17302889575130520630176507368979E-3_r8/
      DATA BK1CS(  6) / -.24334061415659682349600735030164E-5_r8/
      DATA BK1CS(  7) / -.22133876307347258558315252545126E-7_r8/
      DATA BK1CS(  8) / -.14114883926335277610958330212608E-9_r8/
      DATA BK1CS(  9) / -.66669016941993290060853751264373E-12_r8/
      DATA BK1CS( 10) / -.24274498505193659339263196864853E-14_r8/
      DATA BK1CS( 11) / -.70238634793862875971783797120000E-17_r8/
      DATA BK1CS( 12) / -.16543275155100994675491029333333E-19_r8/
      DATA BK1CS( 13) / -.32338347459944491991893333333333E-22_r8/
      DATA BK1CS( 14) / -.53312750529265274999466666666666E-25_r8/
      DATA BK1CS( 15) / -.75130407162157226666666666666666E-28_r8/
      DATA BK1CS( 16) / -.91550857176541866666666666666666E-31_r8/
      DATA AK1CS(  1) / +.27443134069738829695257666227266E+0_r8/
      DATA AK1CS(  2) / +.75719899531993678170892378149290E-1_r8/
      DATA AK1CS(  3) / -.14410515564754061229853116175625E-2_r8/
      DATA AK1CS(  4) / +.66501169551257479394251385477036E-4_r8/
      DATA AK1CS(  5) / -.43699847095201407660580845089167E-5_r8/
      DATA AK1CS(  6) / +.35402774997630526799417139008534E-6_r8/
      DATA AK1CS(  7) / -.33111637792932920208982688245704E-7_r8/
      DATA AK1CS(  8) / +.34459775819010534532311499770992E-8_r8/
      DATA AK1CS(  9) / -.38989323474754271048981937492758E-9_r8/
      DATA AK1CS( 10) / +.47208197504658356400947449339005E-10_r8/
      DATA AK1CS( 11) / -.60478356628753562345373591562890E-11_r8/
      DATA AK1CS( 12) / +.81284948748658747888193837985663E-12_r8/
      DATA AK1CS( 13) / -.11386945747147891428923915951042E-12_r8/
      DATA AK1CS( 14) / +.16540358408462282325972948205090E-13_r8/
      DATA AK1CS( 15) / -.24809025677068848221516010440533E-14_r8/
      DATA AK1CS( 16) / +.38292378907024096948429227299157E-15_r8/
      DATA AK1CS( 17) / -.60647341040012418187768210377386E-16_r8/
      DATA AK1CS( 18) / +.98324256232648616038194004650666E-17_r8/
      DATA AK1CS( 19) / -.16284168738284380035666620115626E-17_r8/
      DATA AK1CS( 20) / +.27501536496752623718284120337066E-18_r8/
      DATA AK1CS( 21) / -.47289666463953250924281069568000E-19_r8/
      DATA AK1CS( 22) / +.82681500028109932722392050346666E-20_r8/
      DATA AK1CS( 23) / -.14681405136624956337193964885333E-20_r8/
      DATA AK1CS( 24) / +.26447639269208245978085894826666E-21_r8/
      DATA AK1CS( 25) / -.48290157564856387897969868800000E-22_r8/
      DATA AK1CS( 26) / +.89293020743610130180656332799999E-23_r8/
      DATA AK1CS( 27) / -.16708397168972517176997751466666E-23_r8/
      DATA AK1CS( 28) / +.31616456034040694931368618666666E-24_r8/
      DATA AK1CS( 29) / -.60462055312274989106506410666666E-25_r8/
      DATA AK1CS( 30) / +.11678798942042732700718421333333E-25_r8/
      DATA AK1CS( 31) / -.22773741582653996232867840000000E-26_r8/
      DATA AK1CS( 32) / +.44811097300773675795305813333333E-27_r8/
      DATA AK1CS( 33) / -.88932884769020194062336000000000E-28_r8/
      DATA AK1CS( 34) / +.17794680018850275131392000000000E-28_r8/
      DATA AK1CS( 35) / -.35884555967329095821994666666666E-29_r8/
      DATA AK1CS( 36) / +.72906290492694257991679999999999E-30_r8/
      DATA AK1CS( 37) / -.14918449845546227073024000000000E-30_r8/
      DATA AK1CS( 38) / +.30736573872934276300799999999999E-31_r8/
      DATA AK12CS(  1) / +.6379308343739001036600488534102E-1_r8/
      DATA AK12CS(  2) / +.2832887813049720935835030284708E-1_r8/
      DATA AK12CS(  3) / -.2475370673905250345414545566732E-3_r8/
      DATA AK12CS(  4) / +.5771972451607248820470976625763E-5_r8/
      DATA AK12CS(  5) / -.2068939219536548302745533196552E-6_r8/
      DATA AK12CS(  6) / +.9739983441381804180309213097887E-8_r8/
      DATA AK12CS(  7) / -.5585336140380624984688895511129E-9_r8/
      DATA AK12CS(  8) / +.3732996634046185240221212854731E-10_r8/
      DATA AK12CS(  9) / -.2825051961023225445135065754928E-11_r8/
      DATA AK12CS( 10) / +.2372019002484144173643496955486E-12_r8/
      DATA AK12CS( 11) / -.2176677387991753979268301667938E-13_r8/
      DATA AK12CS( 12) / +.2157914161616032453939562689706E-14_r8/
      DATA AK12CS( 13) / -.2290196930718269275991551338154E-15_r8/
      DATA AK12CS( 14) / +.2582885729823274961919939565226E-16_r8/
      DATA AK12CS( 15) / -.3076752641268463187621098173440E-17_r8/
      DATA AK12CS( 16) / +.3851487721280491597094896844799E-18_r8/
      DATA AK12CS( 17) / -.5044794897641528977117282508800E-19_r8/
      DATA AK12CS( 18) / +.6888673850418544237018292223999E-20_r8/
      DATA AK12CS( 19) / -.9775041541950118303002132480000E-21_r8/
      DATA AK12CS( 20) / +.1437416218523836461001659733333E-21_r8/
      DATA AK12CS( 21) / -.2185059497344347373499733333333E-22_r8/
      DATA AK12CS( 22) / +.3426245621809220631645388800000E-23_r8/
      DATA AK12CS( 23) / -.5531064394246408232501248000000E-24_r8/
      DATA AK12CS( 24) / +.9176601505685995403782826666666E-25_r8/
      DATA AK12CS( 25) / -.1562287203618024911448746666666E-25_r8/
      DATA AK12CS( 26) / +.2725419375484333132349439999999E-26_r8/
      DATA AK12CS( 27) / -.4865674910074827992378026666666E-27_r8/
      DATA AK12CS( 28) / +.8879388552723502587357866666666E-28_r8/
      DATA AK12CS( 29) / -.1654585918039257548936533333333E-28_r8/
      DATA AK12CS( 30) / +.3145111321357848674303999999999E-29_r8/
      DATA AK12CS( 31) / -.6092998312193127612416000000000E-30_r8/
      DATA AK12CS( 32) / +.1202021939369815834623999999999E-30_r8/
      DATA AK12CS( 33) / -.2412930801459408841386666666666E-31_r8/
      DATA FIRST /.TRUE./
C***FIRST EXECUTABLE STATEMENT  DBSK1E
      IF (FIRST) THEN
         ETA = 0.1_r8*real(D1MACH(3),r8)
         NTK1 = INITDS (BK1CS, 16, ETA)
         NTAK1 = INITDS (AK1CS, 38, ETA)
         NTAK12 = INITDS (AK12CS, 33, ETA)
C
         XMIN = EXP (MAX(LOG(D1MACH(1)),
     +      -LOG(D1MACH(2))) + 0.01_r8)
         XSML = SQRT(4.0_r8*D1MACH(3))
      ENDIF
      FIRST = .FALSE.
C
      IF (X .LE. 0._r8) CALL XERMSG ('SLATEC', 'DBSK1E',
     +   'X IS ZERO OR NEGATIVE', 2, 2)
      IF (X.GT.2.0_r8) GO TO 20
C
      IF (X .LT. XMIN) CALL XERMSG ('SLATEC', 'DBSK1E',
     +   'X SO SMALL K1 OVERFLOWS', 3, 2)
      Y = 0._r8
      IF (X.GT.XSML) Y = X*X
      DBSK1E = EXP(X)*(LOG(0.5_r8*X)*DBESI1(X) + (0.75_r8+
     1  DCSEVL (0.5_r8*Y-1._r8, BK1CS, NTK1))/X )
      RETURN
C
 20   IF (X.LE.8._r8) DBSK1E = (1.25_r8+
     1   DCSEVL ((16._r8/X-5._r8)/3._r8,
     1   AK1CS, NTAK1))/SQRT(X)
      IF (X.GT.8._r8) DBSK1E = (1.25_r8+
     1   DCSEVL (16._r8/X-1._r8, AK12CS, NTAK12))/SQRT(X)
C
      RETURN
      END
! 22Jun2000 fgtok -s r8_precision.sub "r8con.csh conversion"
! 22Jun2000 fgtok
! 22Jun2000 fgtok
! 22Jun2000 fgtok
