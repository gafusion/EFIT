*DECK DBSK0E
      REAL*8 FUNCTION DBSK0E (X)
C***BEGIN PROLOGUE  DBSK0E
C***PURPOSE  Compute the exponentially scaled modified (hyperbolic)
C            Bessel function of the third kind of order zero.
C***LIBRARY   SLATEC (FNLIB)
C***CATEGORY  C10B1
C***TYPE      REAL*8 (BESK0E-S, DBSK0E-D)
C***KEYWORDS  EXPONENTIALLY SCALED, FNLIB, HYPERBOLIC BESSEL FUNCTION,
C             MODIFIED BESSEL FUNCTION, ORDER ZERO, SPECIAL FUNCTIONS,
C             THIRD KIND
C***AUTHOR  Fullerton, W., (LANL)
C***DESCRIPTION
C
C DBSK0E(X) computes the double precision exponentially scaled
C modified (hyperbolic) Bessel function of the third kind of
C order zero for positive double precision argument X.
C
C Series for BK0        on the interval  0.          to  4.00000E+00
C                                        with weighted error   3.08E-33
C                                         log weighted error  32.51
C                               significant figures required  32.05
C                                    decimal places required  33.11
C
C Series for AK0        on the interval  1.25000E-01 to  5.00000E-01
C                                        with weighted error   2.85E-32
C                                         log weighted error  31.54
C                               significant figures required  30.19
C                                    decimal places required  32.33
C
C Series for AK02       on the interval  0.          to  1.25000E-01
C                                        with weighted error   2.30E-32
C                                         log weighted error  31.64
C                               significant figures required  29.68
C                                    decimal places required  32.40
C
C***REFERENCES  (NONE)
C***ROUTINES CALLED  D1MACH, DBESI0, DCSEVL, INITDS, XERMSG
C***REVISION HISTORY  (YYMMDD)
C   770701  DATE WRITTEN
C   890531  Changed all specific intrinsics to generic.  (WRB)
C   890531  REVISION DATE from Version 3.2
C   891214  Prologue converted to Version 4.0 format.  (BAB)
C   900315  CALLs to XERROR changed to CALLs to XERMSG.  (THJ)
C***END PROLOGUE  DBSK0E
C============
C idecl:  explicitize implicit INTEGER declarations:
      IMPLICIT NONE
      integer, parameter :: r8 = selected_real_kind(12,100)
      INTEGER ntk0,ntak0,ntak02,initds
C============
C idecl:  explicitize implicit REAL declarations:
      REAL*8 eta
C============
      REAL*8 X, BK0CS(16), AK0CS(38), AK02CS(33),
     1  XSML, Y, D1MACH, DCSEVL, DBESI0
      LOGICAL FIRST
      SAVE BK0CS, AK0CS, AK02CS, NTK0, NTAK0, NTAK02, XSML, FIRST
      DATA BK0CS(  1) / -.353273932339027687201140060063153E-1_r8/
      DATA BK0CS(  2) / +.344289899924628486886344927529213E+0_r8/
      DATA BK0CS(  3) / +.359799365153615016265721303687231E-1_r8/
      DATA BK0CS(  4) / +.126461541144692592338479508673447E-2_r8/
      DATA BK0CS(  5) / +.228621210311945178608269830297585E-4_r8/
      DATA BK0CS(  6) / +.253479107902614945730790013428354E-6_r8/
      DATA BK0CS(  7) / +.190451637722020885897214059381366E-8_r8/
      DATA BK0CS(  8) / +.103496952576336245851008317853089E-10_r8/
      DATA BK0CS(  9) / +.425981614279108257652445327170133E-13_r8/
      DATA BK0CS( 10) / +.137446543588075089694238325440000E-15_r8/
      DATA BK0CS( 11) / +.357089652850837359099688597333333E-18_r8/
      DATA BK0CS( 12) / +.763164366011643737667498666666666E-21_r8/
      DATA BK0CS( 13) / +.136542498844078185908053333333333E-23_r8/
      DATA BK0CS( 14) / +.207527526690666808319999999999999E-26_r8/
      DATA BK0CS( 15) / +.271281421807298560000000000000000E-29_r8/
      DATA BK0CS( 16) / +.308259388791466666666666666666666E-32_r8/
      DATA AK0CS(  1) / -.7643947903327941424082978270088E-1_r8/
      DATA AK0CS(  2) / -.2235652605699819052023095550791E-1_r8/
      DATA AK0CS(  3) / +.7734181154693858235300618174047E-3_r8/
      DATA AK0CS(  4) / -.4281006688886099464452146435416E-4_r8/
      DATA AK0CS(  5) / +.3081700173862974743650014826660E-5_r8/
      DATA AK0CS(  6) / -.2639367222009664974067448892723E-6_r8/
      DATA AK0CS(  7) / +.2563713036403469206294088265742E-7_r8/
      DATA AK0CS(  8) / -.2742705549900201263857211915244E-8_r8/
      DATA AK0CS(  9) / +.3169429658097499592080832873403E-9_r8/
      DATA AK0CS( 10) / -.3902353286962184141601065717962E-10_r8/
      DATA AK0CS( 11) / +.5068040698188575402050092127286E-11_r8/
      DATA AK0CS( 12) / -.6889574741007870679541713557984E-12_r8/
      DATA AK0CS( 13) / +.9744978497825917691388201336831E-13_r8/
      DATA AK0CS( 14) / -.1427332841884548505389855340122E-13_r8/
      DATA AK0CS( 15) / +.2156412571021463039558062976527E-14_r8/
      DATA AK0CS( 16) / -.3349654255149562772188782058530E-15_r8/
      DATA AK0CS( 17) / +.5335260216952911692145280392601E-16_r8/
      DATA AK0CS( 18) / -.8693669980890753807639622378837E-17_r8/
      DATA AK0CS( 19) / +.1446404347862212227887763442346E-17_r8/
      DATA AK0CS( 20) / -.2452889825500129682404678751573E-18_r8/
      DATA AK0CS( 21) / +.4233754526232171572821706342400E-19_r8/
      DATA AK0CS( 22) / -.7427946526454464195695341294933E-20_r8/
      DATA AK0CS( 23) / +.1323150529392666866277967462400E-20_r8/
      DATA AK0CS( 24) / -.2390587164739649451335981465599E-21_r8/
      DATA AK0CS( 25) / +.4376827585923226140165712554666E-22_r8/
      DATA AK0CS( 26) / -.8113700607345118059339011413333E-23_r8/
      DATA AK0CS( 27) / +.1521819913832172958310378154666E-23_r8/
      DATA AK0CS( 28) / -.2886041941483397770235958613333E-24_r8/
      DATA AK0CS( 29) / +.5530620667054717979992610133333E-25_r8/
      DATA AK0CS( 30) / -.1070377329249898728591633066666E-25_r8/
      DATA AK0CS( 31) / +.2091086893142384300296328533333E-26_r8/
      DATA AK0CS( 32) / -.4121713723646203827410261333333E-27_r8/
      DATA AK0CS( 33) / +.8193483971121307640135680000000E-28_r8/
      DATA AK0CS( 34) / -.1642000275459297726780757333333E-28_r8/
      DATA AK0CS( 35) / +.3316143281480227195890346666666E-29_r8/
      DATA AK0CS( 36) / -.6746863644145295941085866666666E-30_r8/
      DATA AK0CS( 37) / +.1382429146318424677635413333333E-30_r8/
      DATA AK0CS( 38) / -.2851874167359832570811733333333E-31_r8/
      DATA AK02CS(  1) / -.1201869826307592239839346212452E-1_r8/
      DATA AK02CS(  2) / -.9174852691025695310652561075713E-2_r8/
      DATA AK02CS(  3) / +.1444550931775005821048843878057E-3_r8/
      DATA AK02CS(  4) / -.4013614175435709728671021077879E-5_r8/
      DATA AK02CS(  5) / +.1567831810852310672590348990333E-6_r8/
      DATA AK02CS(  6) / -.7770110438521737710315799754460E-8_r8/
      DATA AK02CS(  7) / +.4611182576179717882533130529586E-9_r8/
      DATA AK02CS(  8) / -.3158592997860565770526665803309E-10_r8/
      DATA AK02CS(  9) / +.2435018039365041127835887814329E-11_r8/
      DATA AK02CS( 10) / -.2074331387398347897709853373506E-12_r8/
      DATA AK02CS( 11) / +.1925787280589917084742736504693E-13_r8/
      DATA AK02CS( 12) / -.1927554805838956103600347182218E-14_r8/
      DATA AK02CS( 13) / +.2062198029197818278285237869644E-15_r8/
      DATA AK02CS( 14) / -.2341685117579242402603640195071E-16_r8/
      DATA AK02CS( 15) / +.2805902810643042246815178828458E-17_r8/
      DATA AK02CS( 16) / -.3530507631161807945815482463573E-18_r8/
      DATA AK02CS( 17) / +.4645295422935108267424216337066E-19_r8/
      DATA AK02CS( 18) / -.6368625941344266473922053461333E-20_r8/
      DATA AK02CS( 19) / +.9069521310986515567622348800000E-21_r8/
      DATA AK02CS( 20) / -.1337974785423690739845005311999E-21_r8/
      DATA AK02CS( 21) / +.2039836021859952315522088960000E-22_r8/
      DATA AK02CS( 22) / -.3207027481367840500060869973333E-23_r8/
      DATA AK02CS( 23) / +.5189744413662309963626359466666E-24_r8/
      DATA AK02CS( 24) / -.8629501497540572192964607999999E-25_r8/
      DATA AK02CS( 25) / +.1472161183102559855208038400000E-25_r8/
      DATA AK02CS( 26) / -.2573069023867011283812351999999E-26_r8/
      DATA AK02CS( 27) / +.4601774086643516587376640000000E-27_r8/
      DATA AK02CS( 28) / -.8411555324201093737130666666666E-28_r8/
      DATA AK02CS( 29) / +.1569806306635368939301546666666E-28_r8/
      DATA AK02CS( 30) / -.2988226453005757788979199999999E-29_r8/
      DATA AK02CS( 31) / +.5796831375216836520618666666666E-30_r8/
      DATA AK02CS( 32) / -.1145035994347681332155733333333E-30_r8/
      DATA AK02CS( 33) / +.2301266594249682802005333333333E-31_r8/
      DATA FIRST /.TRUE./
C***FIRST EXECUTABLE STATEMENT  DBSK0E
      IF (FIRST) THEN
         ETA = 0.1_r8*real(D1MACH(3),r8)
         NTK0 = INITDS (BK0CS, 16, ETA)
         NTAK0 = INITDS (AK0CS, 38, ETA)
         NTAK02 = INITDS (AK02CS, 33, ETA)
         XSML = SQRT(4.0_r8*D1MACH(3))
      ENDIF
      FIRST = .FALSE.
C
      IF (X .LE. 0._r8) CALL XERMSG ('SLATEC', 'DBSK0E',
     +   'X IS ZERO OR NEGATIVE', 2, 2)
      IF (X.GT.2.0_r8) GO TO 20
C
      Y = 0._r8
      IF (X.GT.XSML) Y = X*X
      DBSK0E = EXP(X)*(-LOG(0.5_r8*X)*DBESI0(X) - 0.25_r8+
     1  DCSEVL (.5_r8*Y-1._r8, BK0CS, NTK0))
      RETURN
C
 20   IF (X.LE.8._r8) DBSK0E = (1.25_r8+
     1   DCSEVL ((16._r8/X-5._r8)/3._r8,
     1   AK0CS, NTAK0))/SQRT(X)
      IF (X.GT.8._r8) DBSK0E = (1.25_r8+
     1   DCSEVL (16._r8/X-1._r8, AK02CS, NTAK02))/SQRT(X)
C
      RETURN
      END
! 22Jun2000 fgtok -s r8_precision.sub "r8con.csh conversion"
! 22Jun2000 fgtok
! 22Jun2000 fgtok
! 22Jun2000 fgtok
