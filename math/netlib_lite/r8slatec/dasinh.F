*DECK DASINH
      REAL*8 FUNCTION DASINH (X)
C***BEGIN PROLOGUE  DASINH
C***PURPOSE  Compute the arc hyperbolic sine.
C***LIBRARY   SLATEC (FNLIB)
C***CATEGORY  C4C
C***TYPE      REAL*8 (ASINH-S, DASINH-D, CASINH-C)
C***KEYWORDS  ARC HYPERBOLIC SINE, ASINH, ELEMENTARY FUNCTIONS, FNLIB,
C             INVERSE HYPERBOLIC SINE
C***AUTHOR  Fullerton, W., (LANL)
C***DESCRIPTION
C
C DASINH(X) calculates the double precision arc hyperbolic
C sine for double precision argument X.
C
C***REFERENCES  (NONE)
C***ROUTINES CALLED  D1MACH, DCSEVL, INITDS
C***REVISION HISTORY  (YYMMDD)
C   770601  DATE WRITTEN
C   890531  Changed all specific intrinsics to generic.  (WRB)
C   890531  REVISION DATE from Version 3.2
C   891214  Prologue converted to Version 4.0 format.  (BAB)
C***END PROLOGUE  DASINH
C============
C idecl:  explicitize implicit INTEGER declarations:
      IMPLICIT NONE
      integer, parameter :: r8 = selected_real_kind(12,100)
      INTEGER nterms,initds
C============
      REAL*8 X, ASNHCS(39), ALN2, SQEPS, XMAX, Y,
     1  DCSEVL, D1MACH
      LOGICAL FIRST
      SAVE ASNHCS, ALN2, NTERMS, XMAX, SQEPS, FIRST
      DATA ASNHCS(  1) / -.12820039911738186343372127359268E+0_r8/
      DATA ASNHCS(  2) / -.58811761189951767565211757138362E-1_r8/
      DATA ASNHCS(  3) / +.47274654322124815640725249756029E-2_r8/
      DATA ASNHCS(  4) / -.49383631626536172101360174790273E-3_r8/
      DATA ASNHCS(  5) / +.58506207058557412287494835259321E-4_r8/
      DATA ASNHCS(  6) / -.74669983289313681354755069217188E-5_r8/
      DATA ASNHCS(  7) / +.10011693583558199265966192015812E-5_r8/
      DATA ASNHCS(  8) / -.13903543858708333608616472258886E-6_r8/
      DATA ASNHCS(  9) / +.19823169483172793547317360237148E-7_r8/
      DATA ASNHCS( 10) / -.28847468417848843612747272800317E-8_r8/
      DATA ASNHCS( 11) / +.42672965467159937953457514995907E-9_r8/
      DATA ASNHCS( 12) / -.63976084654366357868752632309681E-10_r8/
      DATA ASNHCS( 13) / +.96991686089064704147878293131179E-11_r8/
      DATA ASNHCS( 14) / -.14844276972043770830246658365696E-11_r8/
      DATA ASNHCS( 15) / +.22903737939027447988040184378983E-12_r8/
      DATA ASNHCS( 16) / -.35588395132732645159978942651310E-13_r8/
      DATA ASNHCS( 17) / +.55639694080056789953374539088554E-14_r8/
      DATA ASNHCS( 18) / -.87462509599624678045666593520162E-15_r8/
      DATA ASNHCS( 19) / +.13815248844526692155868802298129E-15_r8/
      DATA ASNHCS( 20) / -.21916688282900363984955142264149E-16_r8/
      DATA ASNHCS( 21) / +.34904658524827565638313923706880E-17_r8/
      DATA ASNHCS( 22) / -.55785788400895742439630157032106E-18_r8/
      DATA ASNHCS( 23) / +.89445146617134012551050882798933E-19_r8/
      DATA ASNHCS( 24) / -.14383426346571317305551845239466E-19_r8/
      DATA ASNHCS( 25) / +.23191811872169963036326144682666E-20_r8/
      DATA ASNHCS( 26) / -.37487007953314343674570604543999E-21_r8/
      DATA ASNHCS( 27) / +.60732109822064279404549242880000E-22_r8/
      DATA ASNHCS( 28) / -.98599402764633583177370173440000E-23_r8/
      DATA ASNHCS( 29) / +.16039217452788496315232638293333E-23_r8/
      DATA ASNHCS( 30) / -.26138847350287686596716134399999E-24_r8/
      DATA ASNHCS( 31) / +.42670849606857390833358165333333E-25_r8/
      DATA ASNHCS( 32) / -.69770217039185243299730773333333E-26_r8/
      DATA ASNHCS( 33) / +.11425088336806858659812693333333E-26_r8/
      DATA ASNHCS( 34) / -.18735292078860968933021013333333E-27_r8/
      DATA ASNHCS( 35) / +.30763584414464922794065920000000E-28_r8/
      DATA ASNHCS( 36) / -.50577364031639824787046399999999E-29_r8/
      DATA ASNHCS( 37) / +.83250754712689142224213333333333E-30_r8/
      DATA ASNHCS( 38) / -.13718457282501044163925333333333E-30_r8/
      DATA ASNHCS( 39) / +.22629868426552784104106666666666E-31_r8/
      DATA ALN2 / 0.69314718055994530941723212145818_r8/
      DATA FIRST /.TRUE./
C***FIRST EXECUTABLE STATEMENT  DASINH
      IF (FIRST) THEN
         NTERMS = INITDS (ASNHCS, 39, 0.1_r8*real(D1MACH(3),r8) )
         SQEPS = SQRT(D1MACH(3))
         XMAX = 1.0_r8/SQEPS
      ENDIF
      FIRST = .FALSE.
C
      Y = ABS(X)
      IF (Y.GT.1.0_r8) GO TO 20
C
      DASINH = X
      IF (Y.GT.SQEPS) DASINH = X*(1.0_r8+
     1   DCSEVL (2._r8*X*X-1._r8,
     1   ASNHCS, NTERMS) )
      RETURN
 20   IF (Y.LT.XMAX) DASINH = LOG (Y+SQRT(Y*Y+1._r8))
      IF (Y.GE.XMAX) DASINH = ALN2 + LOG(Y)
      DASINH = SIGN (DASINH, X)
      RETURN
C
      END
! 22Jun2000 fgtok -s r8_precision.sub "r8con.csh conversion"
! 22Jun2000 fgtok
! 22Jun2000 fgtok
! 22Jun2000 fgtok
